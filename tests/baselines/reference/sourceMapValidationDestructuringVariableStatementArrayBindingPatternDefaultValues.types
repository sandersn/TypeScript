=== tests/cases/compiler/sourceMapValidationDestructuringVariableStatementArrayBindingPatternDefaultValues.ts ===
declare var console: {
>console : { log(msg: string): void; }

    log(msg: string): void;
>log : (msg: string) => void
>msg : string
}
type Robot = [number, string, string];
>Robot : [number, string, string]

var robotA: Robot = [1, "mower", "mowing"];
>robotA : [number, string, string]
>Robot : [number, string, string]
>[1, "mower", "mowing"] : [number, string, string]
>1 : number
>"mower" : string
>"mowing" : string

var robotB: Robot = [2, "trimmer", "trimming"];
>robotB : [number, string, string]
>Robot : [number, string, string]
>[2, "trimmer", "trimming"] : [number, string, string]
>2 : number
>"trimmer" : string
>"trimming" : string

let [, nameA = "noName"] = robotA;
> : undefined
>nameA : string
>"noName" : string
>robotA : [number, string, string]

let [numberB = -1] = robotB;
>numberB : number
>-1 : number
>1 : number
>robotB : [number, string, string]

let [numberA2 = -1, nameA2 = "noName", skillA2 = "noSkill"] = robotA;
>numberA2 : number
>-1 : number
>1 : number
>nameA2 : string
>"noName" : string
>skillA2 : string
>"noSkill" : string
>robotA : [number, string, string]

let [numberC2 = -1] = [3, "edging", "Trimming edges"];
>numberC2 : number
>-1 : number
>1 : number
>[3, "edging", "Trimming edges"] : [number, string, string]
>3 : number
>"edging" : string
>"Trimming edges" : string

let [numberC = -1, nameC = "noName", skillC = "noSkill"] = [3, "edging", "Trimming edges"];
>numberC : number
>-1 : number
>1 : number
>nameC : string
>"noName" : string
>skillC : string
>"noSkill" : string
>[3, "edging", "Trimming edges"] : [number, string, string]
>3 : number
>"edging" : string
>"Trimming edges" : string

let [numberA3 = -1, ...robotAInfo] = robotA;
>numberA3 : number
>-1 : number
>1 : number
>robotAInfo : (number | string)[]
>robotA : [number, string, string]

if (nameA == nameA2) {
>nameA == nameA2 : boolean
>nameA : string
>nameA2 : string

    console.log(skillA2);
>console.log(skillA2) : void
>console.log : (msg: string) => void
>console : { log(msg: string): void; }
>log : (msg: string) => void
>skillA2 : string
}
